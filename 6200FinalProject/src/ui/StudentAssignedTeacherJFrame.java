/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui;

import com.opencsv.CSVWriter;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author yanyanchen
 */
public class StudentAssignedTeacherJFrame extends javax.swing.JFrame {

    /**
     * Creates new form StudentAssignedTeacherJFrame
     */
    public StudentAssignedTeacherJFrame() {
        initComponents();
        populatetblStudentEnrollment();
        populatetblTeachersEnrollment();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblStudent = new javax.swing.JTable();
        btnBack3 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblTeacher = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        lblStudentName = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblStudentAge = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblAssignedTeacher = new javax.swing.JLabel();
        btnAssign = new javax.swing.JButton();
        btnAssignments = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblStudent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Age"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblStudent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblStudentMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblStudent);

        btnBack3.setText("Close");
        btnBack3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBack3ActionPerformed(evt);
            }
        });

        jLabel1.setText("Detailed Informaiton for Student");

        jLabel4.setText("Teacher");

        tblTeacher.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblTeacher.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblTeacherMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblTeacher);

        jLabel2.setText("Student Name:");

        lblStudentName.setText("--");

        jLabel5.setText("Student Age:");

        lblStudentAge.setText("--");

        jLabel7.setText("Assigned Teacher:");

        lblAssignedTeacher.setText("--");

        btnAssign.setText("Assign");
        btnAssign.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignActionPerformed(evt);
            }
        });

        btnAssignments.setText("View Detail Assignment");
        btnAssignments.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignmentsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnBack3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 261, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel1))
                                .addGap(88, 88, 88)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(125, 125, 125))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(btnAssignments)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jLabel7)
                                                .addGap(18, 18, 18)
                                                .addComponent(lblAssignedTeacher)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnAssign)))
                                        .addGap(16, 16, 16))))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblStudentName)
                        .addGap(62, 62, 62)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(lblStudentAge)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(btnBack3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(lblStudentName)
                    .addComponent(jLabel5)
                    .addComponent(lblStudentAge)
                    .addComponent(jLabel7)
                    .addComponent(lblAssignedTeacher)
                    .addComponent(btnAssign))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnAssignments)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBack3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBack3ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_btnBack3ActionPerformed

    private void btnAssignActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignActionPerformed
        // TODO add your handling code here:
        String line = "";
        String splitBy = ",";
        
        if (lblStudentName.getText().equals("--") || lblStudentAge.getText().equals("--")||lblAssignedTeacher.getText().equals("--")){
            JOptionPane.showMessageDialog(this, "Missing student information or teacher information");
            return;
        }
        
        
        String root = System.getProperty("user.dir");
        String FileName="StudentAssign2Teacher.csv"; //change the file name here
        String filePath = root+File.separator+"src"+File.separator+"csvFile"+File.separator+FileName;
        int studentAge=Integer.parseInt(lblStudentAge.getText());
        
        try {
            BufferedReader br = new BufferedReader(new FileReader(filePath));
            while ((line = br.readLine()) != null){
                String[] assignedList = line.split(splitBy);
                if(lblStudentName.getText().equals(assignedList[0]) ){
                    JOptionPane.showMessageDialog(this, "This Student Has Already Benn Assigned A Teacher");
                    lblStudentName.setText("--");
                    lblStudentAge.setText("--");
                    lblAssignedTeacher.setText("--");
                    return;
                }else if(checkRatio(lblAssignedTeacher.getText(),lblStudentAge.getText())==false && studentAge>=6 && studentAge<=12){
                    JOptionPane.showMessageDialog(this, "The teacher's 6-12 months student allocation has reached the upper limit");
                    lblStudentName.setText("--");
                    lblStudentAge.setText("--");
                    lblAssignedTeacher.setText("--");
                    return;
                }else if(checkRatio(lblAssignedTeacher.getText(),lblStudentAge.getText())==false && studentAge>=13 && studentAge<=24){
                    JOptionPane.showMessageDialog(this, "The teacher's 13-24 months student allocation has reached the upper limit");
                    lblStudentName.setText("--");
                    lblStudentAge.setText("--");
                    lblAssignedTeacher.setText("--");
                    return;
                }else if(checkRatio(lblAssignedTeacher.getText(),lblStudentAge.getText())==false && studentAge>=25 && studentAge<=35){
                    JOptionPane.showMessageDialog(this, "The teacher's 25-35 months student allocation has reached the upper limit");
                    lblStudentName.setText("--");
                    lblStudentAge.setText("--");
                    lblAssignedTeacher.setText("--");
                    return;
                }else if(checkRatio(lblAssignedTeacher.getText(),lblStudentAge.getText())==false && studentAge>=36 && studentAge<=47){
                    JOptionPane.showMessageDialog(this, "The teacher's 36-47 months student allocation has reached the upper limit");
                    lblStudentName.setText("--");
                    lblStudentAge.setText("--");
                    lblAssignedTeacher.setText("--");
                    return;
                }else if(checkRatio(lblAssignedTeacher.getText(),lblStudentAge.getText())==false && studentAge>=48 && studentAge<=59){
                    JOptionPane.showMessageDialog(this, "The teacher's 48-59 months student allocation has reached the upper limit");
                    lblStudentName.setText("--");
                    lblStudentAge.setText("--");
                    lblAssignedTeacher.setText("--");
                    return;
                }else if(checkRatio(lblAssignedTeacher.getText(),lblStudentAge.getText())==false && studentAge>=60){
                    JOptionPane.showMessageDialog(this, "The teacher's 60 months student allocation has reached the upper limit");
                    lblStudentName.setText("--");
                    lblStudentAge.setText("--");
                    lblAssignedTeacher.setText("--");
                    return;
                }
            }
        }catch(IOException e){
            e.printStackTrace();
        }
        
        
        try {
            // TODO add your handling code here:
            String csv = filePath;
            
            CSVWriter writer = new CSVWriter(new FileWriter(csv, true));
            
            String[] record = new String[3];
            record[0] = lblStudentName.getText();
            record[1] = lblStudentAge.getText();
            record[2] = lblAssignedTeacher.getText();
            
            writer.writeNext(record,false);
            writer.close();
            
            JOptionPane.showMessageDialog(this, "Assigned Teacher "+lblAssignedTeacher.getText()+" to Student "+lblAssignedTeacher.getText()+" Successfully");

        } catch (IOException ex) {
            ex.printStackTrace();
        }
        
        
        
        
    }//GEN-LAST:event_btnAssignActionPerformed

    private void tblStudentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblStudentMouseClicked
        // TODO add your handling code here:
        int index = tblStudent.getSelectedRow();
        TableModel model=tblStudent.getModel();
        String name =model.getValueAt(index,0).toString();
        lblStudentName.setText(name);
        String age = model.getValueAt(index,1).toString();
        lblStudentAge.setText(age);
    }//GEN-LAST:event_tblStudentMouseClicked

    private void tblTeacherMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblTeacherMouseClicked
        // TODO add your handling code here:
        int index = tblTeacher.getSelectedRow();
        TableModel model=tblTeacher.getModel();
        String teacherName =model.getValueAt(index,0).toString();
        lblAssignedTeacher.setText(teacherName);
    }//GEN-LAST:event_tblTeacherMouseClicked

    private void btnAssignmentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignmentsActionPerformed
        // TODO add your handling code here:
        DetailAssign imu = new DetailAssign();
        imu.setVisible(true);
    }//GEN-LAST:event_btnAssignmentsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentAssignedTeacherJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentAssignedTeacherJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentAssignedTeacherJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentAssignedTeacherJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentAssignedTeacherJFrame().setVisible(true);
            }
        });
    }
    
    
    private void populatetblStudentEnrollment(){
        DefaultTableModel model = (DefaultTableModel) tblStudent.getModel();
        model.setRowCount(0);
        
        String line = "";
        String splitBy = ",";
        
        String root = System.getProperty("user.dir");
        String FileName="students.csv"; //change the file name here
        String filePath = root+File.separator+"src"+File.separator+"csvFile"+File.separator+FileName;
        try {
            BufferedReader br = new BufferedReader(new FileReader(filePath));
            while ((line = br.readLine()) != null){
                String[] user = line.split(splitBy);
                Object[] row =  new Object[3];
                row[0]=user[0];
                row[1]=user[1];
                row[2]=user[2];
                model.addRow(row);
            }
            br.close();
        }catch(IOException e){
            e.printStackTrace();
        }
    }
    private void populatetblTeachersEnrollment(){
        DefaultTableModel model = (DefaultTableModel) tblTeacher.getModel();
        model.setRowCount(0);
        
        String line = "";
        String splitBy = ",";
        
        String root = System.getProperty("user.dir");
        String FileName="teachers.csv"; //change the file name here
        String filePath = root+File.separator+"src"+File.separator+"csvFile"+File.separator+FileName;
        try {
            BufferedReader br = new BufferedReader(new FileReader(filePath));
            while ((line = br.readLine()) != null){
                String[] user = line.split(splitBy);
                Object[] row =  new Object[1];
                row[0]=user[0];
                model.addRow(row);
            }
            br.close();
        }catch(IOException e){
            e.printStackTrace();
        }
    }
    
    
    
     private boolean checkRatio(String teacherName,String studentAge){
        boolean flag=true;
        int studengAge1 = Integer.parseInt(studentAge);
        
        String line = "";
        String splitBy = ",";
    
        String root = System.getProperty("user.dir");
        String FileName="StudentAssign2Teacher.csv"; //change the file name here
        String filePath = root+File.separator+"src"+File.separator+"csvFile"+File.separator+FileName;
        
        int count6_12=0;
        int count13_24=0;
        int count25_35=0;
        int count36_47=0;
        int count48_59=0;
        int count60=0;
        
        try {
            BufferedReader br = new BufferedReader(new FileReader(filePath));
            while ((line = br.readLine()) != null){
                String[] assign = line.split(splitBy);
                
                //Count the number of students in each age group of the teacher
                int age=Integer.parseInt(assign[1]);
                if(teacherName.equals(assign[2])&& age<=12 && age>=6){
                    count6_12++;
                }
                if(teacherName.equals(assign[2])&& age<=13 && age>=24){
                    count13_24++;
                    
                }
                if(teacherName.equals(assign[2])&& age<=25 && age>=35){
                    count25_35++;
                    
                }
                if(teacherName.equals(assign[2])&& age<=36 && age>=47){
                    count36_47++;
                    
                }
                if(teacherName.equals(assign[2])&& age<=48 && age>=59){
                    count48_59++;
                    
                }
                if(teacherName.equals(assign[2])&& age>=60){
                    count60++;
                }
            }
        }catch(IOException e){
            e.printStackTrace();
        }
        //If the upper limit of the age group is not full, then can continue to assign this teacher to student
        if(studengAge1<=12 && studengAge1>=6){
            if(count6_12>=4){
                flag=false;
            }
        }else if(studengAge1<=13 && studengAge1>=24){
            if(count13_24>=5){
                flag=false;
            }
        }else if(studengAge1<=25 && studengAge1>=35){
            if(count25_35>=6){
                flag=false;
            }
        }else if(studengAge1<=36 && studengAge1>=47){
            if(count36_47>=8){
                flag=false;
            }
        }else if(studengAge1<=48 && studengAge1>=59){
            if(count48_59>=12){
                flag=false;
            }
        }else if(studengAge1>=60){
            if(count60>=15){
                flag=false;
            }       
        }
        return flag;
     }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssign;
    private javax.swing.JButton btnAssignments;
    private javax.swing.JButton btnBack3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblAssignedTeacher;
    private javax.swing.JLabel lblStudentAge;
    private javax.swing.JLabel lblStudentName;
    private javax.swing.JTable tblStudent;
    private javax.swing.JTable tblTeacher;
    // End of variables declaration//GEN-END:variables
}
